name: Build

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  schedule:
    - cron: '40 4 * * *'   # every day at 4:40
  pull_request:

jobs:
  test:
    name: "Test"

    strategy:
      matrix:
        platform: [
          ubuntu-latest,
          macos-latest,
          windows-latest
        ]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 15

    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v1

    - name: Install Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
        echo ::add-path::$HOME/.cargo/bin
      if: runner.os == 'macOS'

    - name: "Print Rust Version"
      run: |
        rustc -Vv
        cargo -Vv

    - name: "Run cargo build"
      run: cargo build

    - name: "Run cargo test"
      run: cargo test

    - name: 'Deny Warnings'
      run: cargo build --features deny-warnings

    - name: "Install Rustup Targets"
      run: |
        rustup target add i686-unknown-linux-gnu
        rustup target add thumbv7em-none-eabihf
    - name: 'Build on non x86_64 platforms'
      run: |
        cargo build --target i686-unknown-linux-gnu
        cargo build --target thumbv7em-none-eabihf

    - name: "Install Rustup Components"
      run: rustup component add rust-src llvm-tools-preview
    - name: "Install cargo-xbuild"
      run: cargo install cargo-xbuild --debug
    - name: "Install bootimage"
      run: cargo install bootimage --debug

     # install QEMU
    - name: Install QEMU (Linux)
      run: sudo apt update && sudo apt install qemu-system-x86
      if: runner.os == 'Linux'
    - name: Install QEMU (macOS)
      run: brew install qemu
      if: runner.os == 'macOS'
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1
    - name: Install Scoop (Windows)
      run: |
        Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        echo ::add-path::$HOME\scoop\shims
      if: runner.os == 'Windows'
      shell: pwsh
    - name: Install QEMU (Windows)
      run: scoop install qemu
      if: runner.os == 'Windows'
      shell: pwsh
    - name: "Print QEMU Version"
      run: qemu-system-x86_64 --version

    - name: "Run Test Framework"
      run: cargo xtest
      working-directory: 'testing'

  check_formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v1
    - name: "Add a rustup override for rustfmt nightly"
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: rustfmt
          override: true
    - run: rustup component add rustfmt
    - run: cargo fmt -- --check
